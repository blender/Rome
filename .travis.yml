os: osx
osx_image: xcode9.4

# Use new container infrastructure to enable caching
rvm: 2.1
sudo: true

language: ruby

# The different configurations we want to test. You could also do things like
# change flags or use --stack-yaml to point to a different file.
env:
- ARGS="--resolver=lts-11.13"

before_install:
# Update ruby
# - rvm use 2.1 --install --binary --fuzzy

# Update Homebrew
- brew update

# Install stack
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- brew install stack

# Download and instal hlint
- rake hlint:install[2.0.9]

# Download and install minio
- test ! -e $HOME/.local/bin/minio && travis_retry wget -O $HOME/.local/bin/minio https://dl.minio.io/server/minio/release/darwin-amd64/minio || echo "Minio already in cache"
- chmod +x $HOME/.local/bin/minio

# Install Carthage
- brew outdated carthage || brew upgrade carthage

# Install bats-core
- brew install bats-core

install:
  # Run bundler and install the dependencies in vendor/bundle
  # so that it can be cached.
  - bundle install --deployment

# This line does all of the work: installs GHC if necessary, build the library,
# executables, and test suites, and runs the test suites. --no-terminal works
# around some quirks in Travis's terminal implementation.
script:
  - bundle exec danger
  - stack $ARGS setup
  - stack $ARGS test --no-terminal --haddock --no-haddock-deps
  - stack $ARGS build
  - stack $ARGS sdist
  - stack $ARGS install
  - bats integration-tests/tests.bats
  # - bundle exec pod lib lint # this just won't work for some reason

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.local/bin
  - $HOME/.stack
  - vendor/bundle
